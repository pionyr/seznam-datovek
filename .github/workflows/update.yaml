name: Update data

on:
  schedule:
    - cron:  '33 3 * * *' # daily at 03:33
  workflow_dispatch:
  pull_request:

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install libraries
        run: sudo apt-get install -y xmlstarlet

      - name: Fetch latest data
        run: |-
          # Workaround for API providing only 100 records at once - do multiple specific queries (and filter duplicates later)
          INDEX=0
          for QUERY in "Pionýr, z. s." "pionýrská skupina" "krajská organizace Pionýra" "Pražská organizace Pionýra"; do
            curl -s -o tmp-search-$INDEX.xml -d "<SearchSubjectRequest xmlns=\"http://seznam.gov.cz/ovm/ws/v1\"><Nazev>$QUERY</Nazev></SearchSubjectRequest>" -H 'Content-Type: application/xml' -X POST https://www.mojedatovaschranka.cz/sds/ws/call
            ((INDEX++))
          done

          rm spolky.txt ids.txt # Remove files stored in the repo
          for SEARCH_RESULTS in tmp-search-*.xml; do
            cat $SEARCH_RESULTS | xmlstarlet sel -N n="http://seznam.gov.cz/ovm/ws/v1" -t -v "//n:NazevOsoby[starts-with(.,'Pion')]" >>spolky.txt
            cat $SEARCH_RESULTS | xmlstarlet sel -N n="http://seznam.gov.cz/ovm/ws/v1" -t -v "//n:NazevOsoby[starts-with(.,'Pion')]/following-sibling::n:ISDS" >>ids.txt
            cat $SEARCH_RESULTS | xmlstarlet sel -N n="http://seznam.gov.cz/ovm/ws/v1" -t -v "//n:NazevOsoby[starts-with(.,'Pion')]/../n:Ico" >>tmp-ico.txt

            # add newline at the end of each file
            for FN in spolky.txt ids.txt tmp-ico.txt; do
              echo "" >>$FN
            done
          done

      - name: Generate CSV
        run: |-
          # Escape quote " for CSV with double qoutes "", then add quote on the beginning & end of the line
          while read line; do echo -e "\"${line//\"/\"\"}\""; done < spolky.txt >tmp-spolky-quoted.txt
          # Assemble CSV, sort and filter repeated records
          paste -d"," tmp-spolky-quoted.txt tmp-ico.txt ids.txt | sort -f -V | uniq >tmp-datovky.csv
          # Assmble final CSV with HEADER
          echo '"Spolek","IČO","ID datové schránky"'>datovky.csv
          cat tmp-datovky.csv >>datovky.csv

      - name: Update count
        run: |-
          DS_COUNT=$(cat spolky.txt | wc -l)
          # Update count in count.txt
          echo $DS_COUNT>count.txt
          # Update in README
          sed -E -i "s/(Aktuální počet DS: )([0-9]+)/\1$DS_COUNT/" README.md
          # Add today record to history.csv if not exists
          TODAY=$(date -u "+%F")
          sed -i -n -e '/^'$TODAY',/!p' -e '$a'$TODAY,$DS_COUNT history.csv

      - name: Commit and push if changed
        run: |-
          rm tmp-*
          git config user.name "Automated"
          git config user.email "actions@users.noreply.github.com"
          git add -A
          git diff --cached
          TIMESTAMP=$(date -u "+%F %T %Z")
          git commit -m "Latest data: ${TIMESTAMP}" || exit 0
          git push
